// scriptt.js

let hasValidQR = false;

function openModal() {
  document.getElementById("donateModal").style.display = "block";
  clearDynamicContent();
  resetQRValidation();
}

function closeModal() {
  document.getElementById("donateModal").style.display = "none";
  clearDynamicContent();
  resetQRValidation();
}

function clearDynamicContent() {
  const container = document.getElementById("dynamicContent");
  container.innerHTML = "";
}

function resetQRValidation() {
  hasValidQR = false;
  const submitBtn = document.getElementById("submitBtn");
  const qrStatus = document.getElementById("qr-status");
  const fileNameDisplay = document.getElementById('file-name');
  const fileInput = document.getElementById('slipUpload');
  
  submitBtn.disabled = true;
  qrStatus.style.display = "none";
  fileNameDisplay.style.display = "none";
  fileInput.value = "";
}

// ‡πÅ‡∏™‡∏î‡∏á PromptPay QR (‡πÉ‡∏ä‡πâ API ‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code)
function showPromptPay() {
  const container = document.getElementById("dynamicContent");
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô
  container.innerHTML = `
    <div class="amount-input-section">
      <h3>‡∏à‡πà‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå</h3>
      <p class="amount-label">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏∞‡πÇ‡∏≠‡∏ô</p>
      <div class="amount-input-container">
        <input type="number" id="donateAmount" placeholder="0" min="0" class="amount-input" />
        <span class="currency">‡∏ö‡∏≤‡∏ó</span>
      </div>
      <button onclick="generatePromptPayQR()" class="generate-qr-btn">
        <i class="fa-solid fa-qrcode"></i> ‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code
      </button>
    </div>
  `;
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code ‡∏à‡∏≤‡∏Å API
async function generatePromptPayQR() {
  const container = document.getElementById("dynamicContent");
  const promptpay = '0951386174'; // ‡πÄ‡∏ö‡∏≠‡∏£‡πå PromptPay ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
  const amountInput = document.getElementById('donateAmount');
  const amount = amountInput ? parseFloat(amountInput.value) || 0 : 0;
  
  // ‡πÅ‡∏™‡∏î‡∏á Loading
  container.innerHTML = `
    <div class="loading-container">
      <i class="fa-solid fa-spinner fa-spin loading-icon"></i>
      <p class="loading-text">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code...</p>
    </div>
  `;
  
  try {
    const response = await fetch(`https://www.pp-qr.com/api/${promptpay}/${amount}`);
    
    if (response.ok) {
      const data = await response.json();
      container.innerHTML = `
        <div class="qr-result-container">
          <img src="${data.qrImage}" alt="PromptPay QR" class="qr-image" />
          <div class="qr-info">
            <p class="promptpay-number">‡πÄ‡∏ö‡∏≠‡∏£‡πå PromptPay : ${promptpay}</p>
            ${amount > 0 ? 
              `<p class="amount-info amount-set">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${amount.toLocaleString()} ‡∏ö‡∏≤‡∏ó</p>` : 
              '<p class="amount-info amount-open">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô‡πÉ‡∏™‡πà‡πÄ‡∏≠‡∏á</p>'
            }
          </div>
          <button onclick="showPromptPay()" class="back-btn">
            <i class="fa-solid fa-arrow-left"></i> ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
          </button>
        </div>
      `;
    } else {
      const errorData = await response.json();
      container.innerHTML = `
        <div class="error-container">
          <i class="fa-solid fa-exclamation-triangle error-icon"></i>
          <p class="error-text">${'‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏≠‡∏ô' || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code ‡πÑ‡∏î‡πâ'}</p>
          <button onclick="showPromptPay()" class="retry-btn">‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà</button>
        </div>
      `;
    }
  } catch (error) {
    console.error('Error creating QR code:', error);
    container.innerHTML = `
      <div class="error-container">
        <i class="fa-solid fa-exclamation-triangle error-icon"></i>
        <p class="error-text">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠</p>
        <p class="error-subtext">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</p>
        <button onclick="showPromptPay()" class="retry-btn">‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà</button>
      </div>
    `;
  }
}

// ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£
function showKbankInfo() {
  const container = document.getElementById("dynamicContent");
  container.innerHTML = `
    <div class="bank-info-container">
      <div class="bank-header">
        <img src="assets/ksk.png" alt="Kasikorn Bank" class="bank-logo" />
        <h3>‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢</h3>
      </div>
      <div class="bank-details">
        <p class="bank-detail-item">
          <i class="fa-solid fa-credit-card"></i>
          <span class="detail-label">‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ :</span>
          <strong>1261900671</strong>
        </p>
        <p class="bank-detail-item">
          <i class="fa-solid fa-user"></i>
          <span class="detail-label">‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ :</span>
          <strong>‡∏†‡∏≤‡∏ô‡∏¥‡∏ä‡∏≤ ‡∏®.</strong>
        </p>
        <p class="bank-detail-item">
          <i class="fa-solid fa-building-columns"></i>
          <span class="detail-label">‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£ :</span>
          <strong>‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢</strong>
        </p>
      </div>
    </div>
  `;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö QR Code ‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
function validateQRCode(file) {
  return new Promise((resolve) => {
    const qrStatus = document.getElementById("qr-status");
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
    qrStatus.innerHTML = `
      <i class="fa-solid fa-spinner qr-validation-spinner"></i>
      ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö QR Code ‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û...
    `;
    qrStatus.className = "qr-status validating";
    qrStatus.style.display = "block";

    const reader = new FileReader();
    reader.onload = function(e) {
      const img = new Image();
      img.onload = function() {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á canvas ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');
        canvas.width = img.width;
        canvas.height = img.height;
        ctx.drawImage(img, 0, 0, img.width, img.height);
        
        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• image data
        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
        
        // ‡πÉ‡∏ä‡πâ jsQR ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö QR Code
        const qrCode = jsQR(imageData.data, imageData.width, imageData.height);
        
        if (qrCode) {
          // ‡∏û‡∏ö QR Code
          qrStatus.innerHTML = `
            <i class="fa-solid fa-check-circle"></i>
            ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö QR Code ‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
          `;
          qrStatus.className = "qr-status valid";
          resolve(true);
        } else {
          // ‡πÑ‡∏°‡πà‡∏û‡∏ö QR Code
          qrStatus.innerHTML = `
            <i class="fa-solid fa-exclamation-triangle"></i>
            ‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏™‡∏•‡∏¥‡∏õ‡∏ó‡∏µ‡πà‡∏°‡∏µ QR Code ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
          `;
          qrStatus.className = "qr-status invalid";
          resolve(false);
        }
      };
      
      img.onerror = function() {
        qrStatus.innerHTML = `
          <i class="fa-solid fa-exclamation-triangle"></i>
          ‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        `;
        qrStatus.className = "qr-status invalid";
        resolve(false);
      };
      
      img.src = e.target.result;
    };
    
    reader.onerror = function() {
      qrStatus.innerHTML = `
        <i class="fa-solid fa-exclamation-triangle"></i>
        ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ
      `;
      qrStatus.className = "qr-status invalid";
      resolve(false);
    };
    
    reader.readAsDataURL(file);
  });
}

function submitSlip() {
  const fileInput = document.getElementById("slipUpload");
  if (!fileInput.files.length) {
    alert("‡πÅ‡∏ô‡∏ö‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢");
    return;
  }

  if (!hasValidQR) {
    alert("‡πÅ‡∏ô‡∏ö‡∏™‡∏•‡∏¥‡∏õ‡∏ó‡∏µ‡πà‡∏°‡∏µ QR Code ‡∏ô‡∏∞");
    return;
  }

  // ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á
  const sound = document.getElementById("successSound");
  sound.play();

  // ‡πÅ‡∏™‡∏î‡∏á popup
  const popup = document.getElementById("successPopup");
  popup.style.display = "flex";

  // Auto-close
  setTimeout(() => {
    closePopup();
  }, 5000);
}

function closePopup() {
  const popup = document.getElementById("successPopup");
  popup.style.display = "none";
}

// Event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö QR Code ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå
document.addEventListener('DOMContentLoaded', function() {
  const fileInput = document.getElementById('slipUpload');
  const fileNameDisplay = document.getElementById('file-name');
  const submitBtn = document.getElementById('submitBtn');
  
  fileInput.addEventListener('change', async function(event) {
    if (event.target.files.length > 0) {
      const file = event.target.files[0];
      const fileName = file.name;
      
      // ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
      fileNameDisplay.textContent = `üìÑ ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${fileName}`;
      fileNameDisplay.style.display = 'block';
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå
      if (!file.type.startsWith('image/')) {
        const qrStatus = document.getElementById("qr-status");
        qrStatus.innerHTML = `
          <i class="fa-solid fa-exclamation-triangle"></i>
          ‚ùå ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ô‡πâ‡∏≤‡∏≤
        `;
        qrStatus.className = "qr-status invalid";
        qrStatus.style.display = "block";
        hasValidQR = false;
        submitBtn.disabled = true;
        return;
      }
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö QR Code
      hasValidQR = await validateQRCode(file);
      submitBtn.disabled = !hasValidQR;
      
    } else {
      fileNameDisplay.textContent = '';
      fileNameDisplay.style.display = 'none';
      
      const qrStatus = document.getElementById("qr-status");
      qrStatus.style.display = "none";
      
      hasValidQR = false;
      submitBtn.disabled = true;
    }
  });
});

function submitDonor() {
  const name = document.getElementById("donorName").value.trim() || "‡∏ú‡∏π‡πâ‡πÑ‡∏°‡πà‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏≠‡∏≠‡∏Å‡∏ô‡∏≤‡∏°";
  const message = document.getElementById("donorMessage").value.trim() || "";

  const donorDiv = document.createElement("div");
  donorDiv.className = "donor";
  donorDiv.innerHTML = `<strong>${name}</strong><br/><small>${message}</small>`;

  document.getElementById("donors").prepend(donorDiv);
  document.getElementById("donorName").value = "";
  document.getElementById("donorMessage").value = "";

  closeModal();

  // Future: send data to backend or API
  // sendToAPI(name, message);
}

// Example API call
function sendToAPI(name, message) {
  fetch("https://your-backend-api.com/donations", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ name, message })
  })
  .then(res => res.json())
  .then(data => console.log("Donor saved:", data))
  .catch(err => console.error("Error:", err));
}